/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.8.3-master-4c2b086
 */
!function(){"use strict";angular.module("material.components.autocomplete",["material.core","material.components.icon"])}(),function(){"use strict";function e(e,t,n,a){function l(){c(),i()}function i(){var e=angular.element(E.ul),t=angular.element(E.input),a=e.attr("id")||"ul_"+n.nextUid();e.attr("id",a),t.attr("aria-owns",a)}function o(e){if(e){var t={};return v.itemName&&(t[v.itemName]=e),t}}function c(){var t=parseInt(e.delay,10)||0;e.$watch("searchText",t?n.debounce(r,t):r),e.$watch("selectedItem",function(t,n){e.itemChange&&t!==n&&e.itemChange(o(t))})}function r(t,n){if(v.index=0,t!==x(e.selectedItem)&&(e.selectedItem=null),!t||t.length<Math.max(parseInt(e.minLength,10),1))return v.loading=!1,v.matches=[],v.hidden=g(),m(),void 0;var a=t.toLowerCase();b&&b.cancel&&(b.cancel(),b=null),!e.noCache&&y[a]?(v.matches=y[a],m()):s(t),v.hidden=g(),e.textChange&&t!==n&&e.textChange(o(e.selectedItem))}function s(t){function n(n){y[l]=n,t===e.searchText&&(b=null,v.loading=!1,v.matches=n,v.hidden=g(),m())}var a=e.$parent.$eval(T),l=t.toLowerCase();angular.isArray(a)?n(a):(v.loading=!0,a.success&&a.success(n),a.then&&a.then(n),a.error&&a.error(function(){v.loading=!1}))}function m(){if(!v.hidden)switch(v.matches.length){case 0:return v.messages.splice(0);case 1:return v.messages.push({display:"There is 1 match available."});default:return v.messages.push({display:"There are "+v.matches.length+" matches available."})}}function u(){v.messages.push({display:f()})}function d(){w||(v.hidden=!0)}function p(e){switch(e.keyCode){case a.KEY_CODE.DOWN_ARROW:if(v.loading)return;e.preventDefault(),v.index=Math.min(v.index+1,v.matches.length-1),$(),u();break;case a.KEY_CODE.UP_ARROW:if(v.loading)return;e.preventDefault(),v.index=Math.max(0,v.index-1),$(),u();break;case a.KEY_CODE.ENTER:if(v.loading||v.index<0)return;e.preventDefault(),C(v.index);break;case a.KEY_CODE.ESCAPE:v.matches=[],v.hidden=!0,v.index=0;break;case a.KEY_CODE.TAB:}}function h(){e.searchText="",C(-1),E.input.focus()}function g(){return 1===v.matches.length&&e.searchText===x(v.matches[0])&&e.selectedItem===v.matches[0]}function f(){return x(v.matches[v.index])}function x(t){return t&&e.itemText?e.itemText(o(t)):t}function C(t){e.selectedItem=v.matches[t],e.searchText=x(e.selectedItem)||e.searchText,v.hidden=!0,v.index=0,v.matches=[]}function $(){var e=41*v.index,t=e+41,n=225.5;e<E.ul.scrollTop?E.ul.scrollTop=e:t>E.ul.scrollTop+n&&(E.ul.scrollTop=t-n)}var v=this,A=e.itemsExpr.split(/ in /i),T=A[1],E={main:t[0],ul:t[0].getElementsByTagName("ul")[0],input:t[0].getElementsByTagName("input")[0]},b=null,y={},w=!1;return v.scope=e,v.parent=e.$parent,v.itemName=A[0],v.matches=[],v.loading=!1,v.hidden=!0,v.index=0,v.keydown=p,v.blur=d,v.clear=h,v.select=C,v.getCurrentDisplayValue=f,v.fetch=n.debounce(s),v.messages=[],v.listEnter=function(){w=!0},v.listLeave=function(){w=!1},v.mouseUp=function(){E.input.focus()},l()}angular.module("material.components.autocomplete").controller("MdAutocompleteCtrl",e),e.$inject=["$scope","$element","$mdUtil","$mdConstant"]}(),function(){"use strict";function e(){return{template:'        <md-autocomplete-wrap role="listbox">          <input type="text"              ng-disabled="isDisabled"              ng-model="searchText"              ng-keydown="$mdAutocompleteCtrl.keydown($event)"              ng-blur="$mdAutocompleteCtrl.blur()"              placeholder="{{placeholder}}"              aria-label="{{placeholder}}"              aria-autocomplete="list"              aria-haspopup="true"              aria-activedescendant=""              aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>          <button              type="button"              ng-if="searchText"              ng-click="$mdAutocompleteCtrl.clear()">            <md-icon md-svg-icon="cancel"></md-icon>            <span class="visually-hidden">Clear</span>          </button>          <md-progress-linear              ng-if="$mdAutocompleteCtrl.loading"              md-mode="indeterminate"></md-progress-linear>        </md-autocomplete-wrap>        <ul role="presentation"            ng-mouseenter="$mdAutocompleteCtrl.listEnter()"            ng-mouseleave="$mdAutocompleteCtrl.listLeave()"            ng-mouseup="$mdAutocompleteCtrl.mouseUp()">          <li ng-repeat="(index, item) in $mdAutocompleteCtrl.matches"              ng-class="{ selected: index === $mdAutocompleteCtrl.index }"              ng-show="searchText && !$mdAutocompleteCtrl.hidden"              ng-click="$mdAutocompleteCtrl.select(index)"              ng-transclude              md-autocomplete-list-item="$mdAutocompleteCtrl.itemName">          </li>        </ul>        <aria-status            class="visually-hidden"            role="status"            aria-live="assertive">          <p ng-repeat="message in $mdAutocompleteCtrl.messages">{{message.display}}</p>        </aria-status>',transclude:!0,controller:"MdAutocompleteCtrl",controllerAs:"$mdAutocompleteCtrl",scope:{searchText:"=mdSearchText",selectedItem:"=mdSelectedItem",itemsExpr:"@mdItems",itemText:"&mdItemText",placeholder:"@placeholder",noCache:"=mdNoCache",itemChange:"&mdSelectedItemChange",textChange:"&mdSearchTextChange",isDisabled:"=ngDisabled",minLength:"=mdMinLength",delay:"=mdDelay"}}}angular.module("material.components.autocomplete").directive("mdAutocomplete",e)}(),function(){"use strict";function e(e,t,n){function a(e){return e?e.replace(/[\*\[\]\(\)\{\}\\\^\$]/g,"\\$&"):e}var l=t.attr("md-highlight-text"),i=n(t.text())(e),o=e.$watch(l,function(e){var n=new RegExp("^"+a(e),"i"),l=i.replace(n,'<span class="highlight">$&</span>');t.html(l)});t.on("$destroy",function(){o()})}angular.module("material.components.autocomplete").controller("MdHighlightCtrl",e),e.$inject=["$scope","$element","$interpolate"]}(),function(){"use strict";function e(){return{terminal:!0,scope:!1,controller:"MdHighlightCtrl"}}angular.module("material.components.autocomplete").directive("mdHighlightText",e)}(),function(){"use strict";function e(e,t){function n(n,a,l,i){var o=i.parent.$new(!1,i.parent),c=i.scope.$eval(l.mdAutocompleteListItem);o[c]=n.item,e(a.contents())(o),a.attr({role:"option",id:"item_"+t.nextUid()})}return{require:"^?mdAutocomplete",terminal:!0,link:n,scope:!1}}angular.module("material.components.autocomplete").directive("mdAutocompleteListItem",e),e.$inject=["$compile","$mdUtil"]}();