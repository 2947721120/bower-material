/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.10.1-rc1-master-b316bba
 */
!function(e,t,n){"use strict";function i(e,i,o,l,a,r,c,m,s,p){function h(){o.initOptionalProperties(e,s,{searchText:null,selectedItem:null}),a(i),x(),o.nextTick(function(){v(),$(),g()})}function f(){function e(){var e=te.ul.getBoundingClientRect(),n={};e.right>i.right-d&&(n.left=t.right-e.width+"px"),te.$.ul.css(n)}if(!te)return o.nextTick(f);var t=te.wrap.getBoundingClientRect(),n=te.snap.getBoundingClientRect(),i=te.root.getBoundingClientRect(),l=n.bottom-i.top,a=i.bottom-n.top,r=t.left-i.left,c=t.width,m={left:r+"px",minWidth:c+"px",maxWidth:Math.max(t.right-i.left,i.right-t.left)-d+"px"};l>a&&i.height-t.bottom-d<u?(m.top="auto",m.bottom=a+"px",m.maxHeight=Math.min(u,t.top-i.top-d)+"px"):(m.top=l+"px",m.bottom="auto",m.maxHeight=Math.min(u,i.bottom-t.bottom-d)+"px"),te.$.ul.css(m),o.nextTick(e)}function g(){te.$.root.length&&(a(te.$.ul),te.$.ul.detach(),te.$.root.append(te.$.ul),c.pin&&c.pin(te.$.ul,m))}function $(){e.autofocus&&te.input.focus()}function x(){var n=parseInt(e.delay,10)||0;s.$observe("disabled",function(e){X.isDisabled=e}),s.$observe("required",function(e){X.isRequired=null!==e}),e.$watch("searchText",n?o.debounce(R,n):R),M(k),e.$watch("selectedItem",D),t.element(r).on("resize",f),e.$on("$destroy",C)}function C(){t.element(r).off("resize",f),te.$.ul.remove()}function v(){te={main:i[0],ul:i.find("ul")[0],input:i.find("input")[0],wrap:i.find("md-autocomplete-wrap")[0],root:document.body},te.li=te.ul.getElementsByTagName("li"),te.snap=A(),te.$=b(te)}function A(){for(var e=i;e.length;e=e.parent())if(t.isDefined(e.attr("md-autocomplete-snap")))return e[0];return te.wrap}function b(e){var n={};for(var i in e)n[i]=t.element(e[i]);return n}function T(e,t){!e&&t?(f(),te&&o.nextTick(function(){o.disableScrollAround(te.ul)})):e&&!t&&o.nextTick(function(){o.enableScrolling()})}function w(){ie=!0}function y(){ie=!1,le||(X.hidden=!0)}function E(){te.input.focus()}function k(t,n){t&&H(t).then(function(t){e.searchText=t}),t!==n&&I()}function I(){t.isFunction(e.itemChange)&&e.itemChange(_(e.selectedItem))}function L(){t.isFunction(e.textChange)&&e.textChange()}function D(e,t){for(var n=0;n<oe.length;++n)oe[n](e,t)}function M(e){-1==oe.indexOf(e)&&oe.push(e)}function O(e){var t=oe.indexOf(e);-1!=t&&oe.splice(t,1)}function R(t,n){X.index=W(),t!==n&&H(e.selectedItem).then(function(i){t!==i&&(e.selectedItem=null,t!==n&&L(),P()?Q():(X.loading=!1,X.matches=[],X.hidden=j(),V()))})}function N(){le=!1,ie||(X.hidden=!0)}function S(){le=!0,t.isString(e.searchText)||(e.searchText=""),e.minLength>0||(X.hidden=j(),X.hidden||Q())}function U(e){switch(e.keyCode){case l.KEY_CODE.DOWN_ARROW:if(X.loading)return;e.preventDefault(),X.index=Math.min(X.index+1,X.matches.length-1),J(),V();break;case l.KEY_CODE.UP_ARROW:if(X.loading)return;e.preventDefault(),X.index=X.index<0?X.matches.length-1:Math.max(0,X.index-1),J(),V();break;case l.KEY_CODE.TAB:case l.KEY_CODE.ENTER:if(X.hidden||X.loading||X.index<0||X.matches.length<1)return;e.preventDefault(),Y(X.index);break;case l.KEY_CODE.ESCAPE:X.matches=[],X.hidden=!0,X.index=W()}}function q(){return t.isNumber(e.minLength)?e.minLength:1}function H(t){function n(t){return t&&e.itemText?e.itemText(_(t)):null}return p.when(n(t)||t)}function _(e){if(!e)return n;var t={};return X.itemName&&(t[X.itemName]=e),t}function W(){return e.autoselect?0:-1}function j(){return P()&&X.matches.length?void 0:!0}function B(){return H(X.matches[X.index])}function P(){return t.isDefined(e.searchText)&&e.searchText.length>=q()}function K(e,t,n){Object.defineProperty(X,e,{get:function(){return n},set:function(e){var i=n;n=e,t(e,i)}})}function Y(t){o.nextTick(function(){H(X.matches[t]).then(function(e){var t=te.$.input.controller("ngModel");t.$setViewValue(e),t.$render()})["finally"](function(){e.selectedItem=X.matches[t],X.loading=!1,X.hidden=!0,X.index=0,X.matches=[]})})}function z(){e.searchText="",Y(-1);var t=document.createEvent("CustomEvent");t.initCustomEvent("input",!0,!0,{value:e.searchText}),te.input.dispatchEvent(t),te.input.focus()}function F(n){function i(t){ne[a]=t,n===e.searchText&&(X.matches=t,X.hidden=j(),V(),f())}var l=e.$parent.$eval(ee),a=n.toLowerCase();t.isArray(l)?i(l):l&&o.nextTick(function(){X.loading=!0,l.success&&l.success(i),l.then&&l.then(i),l["finally"]&&l["finally"](function(){X.loading=!1})})}function V(){B().then(function(e){X.messages=[G(),e]})}function G(){if(ae===X.matches.length)return"";switch(ae=X.matches.length,X.matches.length){case 0:return"There are no matches available.";case 1:return"There is 1 match available.";default:return"There are "+X.matches.length+" matches available."}}function J(){if(te.li[X.index]){var e=te.li[X.index],t=e.offsetTop,n=t+e.offsetHeight,i=te.ul.clientHeight;t<te.ul.scrollTop?te.ul.scrollTop=t:n>te.ul.scrollTop+i&&(te.ul.scrollTop=n-i)}}function Q(){var t=e.searchText,n=t.toLowerCase();!e.noCache&&ne[n]?(X.matches=ne[n],V()):F(t),le&&(X.hidden=j())}var X=this,Z=e.itemsExpr.split(/ in /i),ee=Z[1],te=null,ne={},ie=!1,oe=[],le=!1,ae=0;return K("hidden",T,!0),X.scope=e,X.parent=e.$parent,X.itemName=Z[0],X.matches=[],X.loading=!1,X.hidden=!0,X.index=null,X.messages=[],X.id=o.nextUid(),X.isDisabled=null,X.isRequired=null,X.keydown=U,X.blur=N,X.focus=S,X.clear=z,X.select=Y,X.listEnter=w,X.listLeave=y,X.mouseUp=E,X.getCurrentDisplayValue=B,X.registerSelectedItemWatcher=M,X.unregisterSelectedItemWatcher=O,h()}function o(e,t){return{controller:"MdAutocompleteCtrl",controllerAs:"$mdAutocompleteCtrl",scope:{inputName:"@mdInputName",inputMinlength:"@mdInputMinlength",inputMaxlength:"@mdInputMaxlength",searchText:"=?mdSearchText",selectedItem:"=?mdSelectedItem",itemsExpr:"@mdItems",itemText:"&mdItemText",placeholder:"@placeholder",noCache:"=?mdNoCache",itemChange:"&?mdSelectedItemChange",textChange:"&?mdSearchTextChange",minLength:"=?mdMinLength",delay:"=?mdDelay",autofocus:"=?mdAutofocus",floatingLabel:"@?mdFloatingLabel",autoselect:"=?mdAutoselect",menuClass:"@?mdMenuClass"},template:function(e,t){function n(){var t=e.find("md-item-template").remove(),n=t.length?t.html():e.html();return t.length||e.empty(),n}function i(){var t=e.find("md-not-found").remove(),n=t.length?t.html():"";return n?'<li ng-if="!$mdAutocompleteCtrl.matches.length && !$mdAutocompleteCtrl.loading                         && !$mdAutocompleteCtrl.hidden"                         ng-hide="$mdAutocompleteCtrl.hidden"                         md-autocomplete-parent-scope>'+n+"</li>":""}function o(){return t.mdFloatingLabel?'            <md-input-container flex ng-if="floatingLabel">              <label>{{floatingLabel}}</label>              <input type="search"                  id="fl-input-{{$mdAutocompleteCtrl.id}}"                  name="{{inputName}}"                  autocomplete="off"                  ng-required="$mdAutocompleteCtrl.isRequired"                  ng-minlength="inputMinlength"                  ng-maxlength="inputMaxlength"                  ng-disabled="$mdAutocompleteCtrl.isDisabled"                  ng-model="$mdAutocompleteCtrl.scope.searchText"                  ng-keydown="$mdAutocompleteCtrl.keydown($event)"                  ng-blur="$mdAutocompleteCtrl.blur()"                  ng-focus="$mdAutocompleteCtrl.focus()"                  aria-owns="ul-{{$mdAutocompleteCtrl.id}}"                  aria-label="{{floatingLabel}}"                  aria-autocomplete="list"                  aria-haspopup="true"                  aria-activedescendant=""                  aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>              <div md-autocomplete-parent-scope md-autocomplete-replace>'+r+"</div>            </md-input-container>":'            <input flex type="search"                id="input-{{$mdAutocompleteCtrl.id}}"                name="{{inputName}}"                ng-if="!floatingLabel"                autocomplete="off"                ng-required="$mdAutocompleteCtrl.isRequired"                ng-disabled="$mdAutocompleteCtrl.isDisabled"                ng-model="$mdAutocompleteCtrl.scope.searchText"                ng-keydown="$mdAutocompleteCtrl.keydown($event)"                ng-blur="$mdAutocompleteCtrl.blur()"                ng-focus="$mdAutocompleteCtrl.focus()"                placeholder="{{placeholder}}"                aria-owns="ul-{{$mdAutocompleteCtrl.id}}"                aria-label="{{placeholder}}"                aria-autocomplete="list"                aria-haspopup="true"                aria-activedescendant=""                aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>            <button                type="button"                tabindex="-1"                ng-if="$mdAutocompleteCtrl.scope.searchText && !$mdAutocompleteCtrl.isDisabled"                ng-click="$mdAutocompleteCtrl.clear()">              <md-icon md-svg-icon="md-close"></md-icon>              <span class="md-visually-hidden">Clear</span>            </button>                '}var l=i(),a=n(),r=e.html();return'        <md-autocomplete-wrap            layout="row"            ng-class="{ \'md-whiteframe-z1\': !floatingLabel, \'md-menu-showing\': !$mdAutocompleteCtrl.hidden }"            role="listbox">          '+o()+'          <md-progress-linear              ng-if="$mdAutocompleteCtrl.loading && !$mdAutocompleteCtrl.hidden"              md-mode="indeterminate"></md-progress-linear>          <ul role="presentation"              class="md-autocomplete-suggestions md-whiteframe-z1 {{menuClass || \'\'}}"              id="ul-{{$mdAutocompleteCtrl.id}}"              ng-hide="$mdAutocompleteCtrl.hidden"              ng-mouseenter="$mdAutocompleteCtrl.listEnter()"              ng-mouseleave="$mdAutocompleteCtrl.listLeave()"              ng-mouseup="$mdAutocompleteCtrl.mouseUp()">            <li ng-repeat="(index, item) in $mdAutocompleteCtrl.matches"                ng-class="{ selected: index === $mdAutocompleteCtrl.index }"                ng-click="$mdAutocompleteCtrl.select(index)"                md-autocomplete-list-item="$mdAutocompleteCtrl.itemName">                '+a+"            </li>            "+l+'          </ul>        </md-autocomplete-wrap>        <aria-status            class="md-visually-hidden"            role="status"            aria-live="assertive">          <p ng-repeat="message in $mdAutocompleteCtrl.messages track by $index" ng-if="message">{{message}}</p>        </aria-status>'}}}function l(e,n,i){function o(o){var l=i(n.html())(e),r=t.element("<div>").text(l).html(),c=n.attr("md-highlight-flags")||"",m=e.$watch(o,function(e){var t=a(e,c),i=r.replace(t,'<span class="highlight">$&</span>');n.html(i)});n.on("$destroy",function(){m()})}function l(e){return e?e.replace(/[\\\^\$\*\+\?\.\(\)\|\{\}\[\]]/g,"\\$&"):e}function a(e,t){var n="";return t.indexOf("^")>=1&&(n+="^"),n+=e,t.indexOf("$")>=1&&(n+="$"),new RegExp(l(n),t.replace(/[\$\^]/g,""))}return this.init=o,o()}function a(){return{terminal:!0,scope:!1,controller:"MdHighlightCtrl",link:function(e,t,n,i){i.init(n.mdHighlightText)}}}function r(e,t){function n(n,i,o){var l=n.$parent.$mdAutocompleteCtrl,a=l.parent.$new(!1,l.parent),r=l.scope.$eval(o.mdAutocompleteListItem);a[r]=n.item,e(i.contents())(a),i.attr({role:"option",id:"item_"+t.nextUid()})}return{terminal:!0,link:n,scope:!1}}function c(e,t){function n(t,n,i){var o=t.$parent.$mdAutocompleteCtrl;e(n.contents())(o.parent),i.hasOwnProperty("mdAutocompleteReplace")&&(n.after(n.contents()),n.remove())}return{restrict:"A",terminal:!0,link:n,scope:!1}}t.module("material.components.autocomplete",["material.core","material.components.icon"]),t.module("material.components.autocomplete").controller("MdAutocompleteCtrl",i);var m=41,u=5.5*m,d=8;i.$inject=["$scope","$element","$mdUtil","$mdConstant","$mdTheming","$window","$animate","$rootElement","$attrs","$q"],t.module("material.components.autocomplete").directive("mdAutocomplete",o),o.$inject=["$mdTheming","$mdUtil"],t.module("material.components.autocomplete").controller("MdHighlightCtrl",l),l.$inject=["$scope","$element","$interpolate"],t.module("material.components.autocomplete").directive("mdHighlightText",a),t.module("material.components.autocomplete").directive("mdAutocompleteListItem",r),r.$inject=["$compile","$mdUtil"],t.module("material.components.autocomplete").directive("mdAutocompleteParentScope",c),c.$inject=["$compile","$mdUtil"]}(window,window.angular);