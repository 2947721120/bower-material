/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.9.0-rc3-master-211a31e
 */
!function(){"use strict";function e(e,t,n,l,o,a,r,m,u){function d(){g(),o(function(){f(),h(),p()})}function s(){function e(){var e=P.ul.getBoundingClientRect(),n={};e.right>l.right-c&&(n.left=t.right-e.width+"px"),P.$.ul.css(n)}if(!P)return o(s,0,!1);var t=P.wrap.getBoundingClientRect(),n=P.snap.getBoundingClientRect(),l=P.root.getBoundingClientRect(),a=n.bottom-l.top,r=l.bottom-n.top,m=t.left-l.left,u=t.width,d={left:m+"px",minWidth:u+"px",maxWidth:Math.max(t.right-l.left,l.right-t.left)-c+"px"};a>r&&l.height-t.bottom-c<i?(d.top="auto",d.bottom=r+"px",d.maxHeight=Math.min(i,t.top-l.top-c)+"px"):(d.top=a+"px",d.bottom="auto",d.maxHeight=Math.min(i,l.bottom-t.bottom-c)+"px"),P.$.ul.css(d),o(e,0,!1)}function p(){P.$.root.length&&(a(P.$.ul),P.$.ul.detach(),P.$.root.append(P.$.ul),m.pin&&m.pin(P.$.ul,u))}function h(){e.autofocus&&P.input.focus()}function g(){var t=parseInt(e.delay,10)||0;e.$watch("searchText",t?n.debounce(T,t):T),A(C),e.$watch("selectedItem",v),e.$watch("$mdAutocompleteCtrl.hidden",function(e,t){!e&&t&&s()}),angular.element(r).on("resize",s)}function f(){P={main:t[0],ul:t.find("ul")[0],input:t.find("input")[0],wrap:t.find("md-autocomplete-wrap")[0],root:document.body},P.li=P.ul.getElementsByTagName("li"),P.snap=$(),P.$=x(P)}function $(){for(var e=t;e.length;e=e.parent())if(angular.isDefined(e.attr("md-autocomplete-snap")))return e[0];return P.wrap}function x(e){var t={};for(var n in e)t[n]=angular.element(e[n]);return t}function C(t,n){t&&(e.searchText=L(t)),e.itemChange&&t!==n&&e.itemChange(D(t))}function v(e,t){for(var n=0;n<q.length;++n)q[n](e,t)}function A(e){-1==q.indexOf(e)&&q.push(e)}function b(e){var t=q.indexOf(e);-1!=t&&q.splice(t,1)}function T(t,n){K.index=k(),t!==n&&t!==L(e.selectedItem)&&(e.selectedItem=null,e.textChange&&t!==n&&e.textChange(D(e.selectedItem)),R()?B():(K.loading=!1,K.matches=[],K.hidden=O(),_()))}function w(){G=!1,V||(K.hidden=!0)}function E(){G=!0,angular.isString(e.searchText)||(e.searchText=""),e.minLength>0||(K.hidden=O(),K.hidden||B())}function y(e){switch(e.keyCode){case l.KEY_CODE.DOWN_ARROW:if(K.loading)return;e.preventDefault(),K.index=Math.min(K.index+1,K.matches.length-1),W(),H();break;case l.KEY_CODE.UP_ARROW:if(K.loading)return;e.preventDefault(),K.index=K.index<0?K.matches.length-1:Math.max(0,K.index-1),W(),H();break;case l.KEY_CODE.TAB:case l.KEY_CODE.ENTER:if(K.hidden||K.loading||K.index<0||K.matches.length<1)return;e.preventDefault(),N(K.index);break;case l.KEY_CODE.ESCAPE:K.matches=[],K.hidden=!0,K.index=k()}}function I(){return angular.isNumber(e.minLength)?e.minLength:1}function L(t){return t&&e.itemText?e.itemText(D(t)):t}function D(e){if(e){var t={};return K.itemName&&(t[K.itemName]=e),t}}function k(){return e.autoselect?0:-1}function O(){return R()?void 0:!0}function M(){return L(K.matches[K.index])}function R(){return e.searchText.length>=I()}function N(t){e.selectedItem=K.matches[t],e.searchText=L(e.selectedItem)||e.searchText,K.hidden=!0,K.index=0,K.matches=[]}function S(){e.searchText="",N(-1);var t=document.createEvent("CustomEvent");t.initCustomEvent("input",!0,!0,{value:e.searchText}),P.input.dispatchEvent(t),P.input.focus()}function U(t){function n(n){F[o]=n,K.loading=!1,t===e.searchText&&(z=null,K.matches=n,K.hidden=O(),_(),s())}var l=e.$parent.$eval(j),o=t.toLowerCase();angular.isArray(l)?n(l):(K.loading=!0,l.success&&l.success(n),l.then&&l.then(n),l.error&&l.error(function(){K.loading=!1}))}function _(){if(!K.hidden)switch(K.matches.length){case 0:return K.messages.splice(0);case 1:return K.messages.push({display:"There is 1 match available."});default:return K.messages.push({display:"There are "+K.matches.length+" matches available."})}}function H(){K.messages.push({display:M()})}function W(){var e=P.li[K.index],t=e.offsetTop,n=t+e.offsetHeight,l=P.ul.clientHeight;t<P.ul.scrollTop?P.ul.scrollTop=t:n>P.ul.scrollTop+l&&(P.ul.scrollTop=n-l)}function B(){var t=e.searchText,n=t.toLowerCase();z&&z.cancel&&(z.cancel(),z=null),!e.noCache&&F[n]?(K.matches=F[n],_()):U(t),K.hidden=O()}var K=this,Y=e.itemsExpr.split(/ in /i),j=Y[1],P=null,z=null,F={},V=!1,q=[],G=!1;return K.scope=e,K.parent=e.$parent,K.itemName=Y[0],K.matches=[],K.loading=!1,K.hidden=!0,K.index=null,K.messages=[],K.id=n.nextUid(),K.keydown=y,K.blur=w,K.focus=E,K.clear=S,K.select=N,K.getCurrentDisplayValue=M,K.registerSelectedItemWatcher=A,K.unregisterSelectedItemWatcher=b,K.listEnter=function(){V=!0},K.listLeave=function(){V=!1,G||(K.hidden=!0)},K.mouseUp=function(){P.input.focus()},d()}function t(e,t){function n(n,l,o){o.$observe("disabled",function(e){n.isDisabled=e}),n.contents=o.$mdAutocompleteTemplate,delete o.$mdAutocompleteTemplate,t.initOptionalProperties(n,o,{searchText:null,selectedItem:null}),e(l)}return{controller:"MdAutocompleteCtrl",controllerAs:"$mdAutocompleteCtrl",link:n,scope:{name:"@",searchText:"=?mdSearchText",selectedItem:"=?mdSelectedItem",itemsExpr:"@mdItems",itemText:"&mdItemText",placeholder:"@placeholder",noCache:"=?mdNoCache",itemChange:"&?mdSelectedItemChange",textChange:"&?mdSearchTextChange",minLength:"=?mdMinLength",delay:"=?mdDelay",autofocus:"=?mdAutofocus",floatingLabel:"@?mdFloatingLabel",autoselect:"=?mdAutoselect",menuClass:"@?mdMenuClass"},template:function(e,t){return t.$mdAutocompleteTemplate=e.html(),'        <md-autocomplete-wrap role="listbox">          <md-input-container ng-if="floatingLabel">            <label>{{floatingLabel}}</label>            <input type="text"                id="fl-input-{{$mdAutocompleteCtrl.id}}"                name="{{name}}"                autocomplete="off"                ng-disabled="isDisabled"                ng-model="$mdAutocompleteCtrl.scope.searchText"                ng-keydown="$mdAutocompleteCtrl.keydown($event)"                ng-blur="$mdAutocompleteCtrl.blur()"                ng-focus="$mdAutocompleteCtrl.focus()"                aria-owns="ul-{{$mdAutocompleteCtrl.id}}"                aria-label="{{floatingLabel}}"                aria-autocomplete="list"                aria-haspopup="true"                aria-activedescendant=""                aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>                        </md-input-container>          <input type="text"              id="input-{{$mdAutocompleteCtrl.id}}"              name="{{name}}"              ng-if="!floatingLabel"              autocomplete="off"              ng-disabled="isDisabled"              ng-model="$mdAutocompleteCtrl.scope.searchText"              ng-keydown="$mdAutocompleteCtrl.keydown($event)"              ng-blur="$mdAutocompleteCtrl.blur()"              ng-focus="$mdAutocompleteCtrl.focus()"              placeholder="{{placeholder}}"              aria-owns="ul-{{$mdAutocompleteCtrl.id}}"              aria-label="{{placeholder}}"              aria-autocomplete="list"              aria-haspopup="true"              aria-activedescendant=""              aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>          <button              type="button"              tabindex="-1"              ng-if="$mdAutocompleteCtrl.scope.searchText && !isDisabled"              ng-click="$mdAutocompleteCtrl.clear()">            <md-icon md-svg-icon="md-cancel"></md-icon>            <span class="md-visually-hidden">Clear</span>          </button>          <md-progress-linear              ng-if="$mdAutocompleteCtrl.loading"              md-mode="indeterminate"></md-progress-linear>          <ul role="presentation"              class="md-autocomplete-suggestions {{menuClass || \'\'}}"              id="ul-{{$mdAutocompleteCtrl.id}}"              ng-mouseenter="$mdAutocompleteCtrl.listEnter()"              ng-mouseleave="$mdAutocompleteCtrl.listLeave()"              ng-mouseup="$mdAutocompleteCtrl.mouseUp()">            <li ng-repeat="(index, item) in $mdAutocompleteCtrl.matches"                ng-class="{ selected: index === $mdAutocompleteCtrl.index }"                ng-hide="$mdAutocompleteCtrl.hidden"                ng-click="$mdAutocompleteCtrl.select(index)"                md-autocomplete-list-item-template="contents"                md-autocomplete-list-item="$mdAutocompleteCtrl.itemName">            </li>          </ul>        </md-autocomplete-wrap>        <aria-status            class="md-visually-hidden"            role="status"            aria-live="assertive">          <p ng-repeat="message in $mdAutocompleteCtrl.messages">{{message.display}}</p>        </aria-status>'}}}function n(e,t,n){function l(e){return e?e.replace(/[\\\^\$\*\+\?\.\(\)\|\{\}\[\]]/g,"\\$&"):e}function o(e,t){var n="";return t.indexOf("^")>=1&&(n+="^"),n+=e,t.indexOf("$")>=1&&(n+="$"),new RegExp(l(n),t.replace(/[\$\^]/g,""))}var a=t.attr("md-highlight-text"),i=n(t.text())(e),c=t.attr("md-highlight-flags")||"",r=e.$watch(a,function(e){var n=o(e,c),l=i.replace(n,'<span class="highlight">$&</span>');t.html(l)});t.on("$destroy",function(){r()})}function l(){return{terminal:!0,scope:!1,controller:"MdHighlightCtrl"}}function o(e,t){function n(n,l,o){var a=n.$parent.$mdAutocompleteCtrl,i=a.parent.$new(!1,a.parent),c=a.scope.$eval(o.mdAutocompleteListItem);i[c]=n.item,l.html(a.scope.$eval(o.mdAutocompleteListItemTemplate)),e(l.contents())(i),l.attr({role:"option",id:"item_"+t.nextUid()})}return{terminal:!0,link:n,scope:!1}}angular.module("material.components.autocomplete",["material.core","material.components.icon"]),angular.module("material.components.autocomplete").controller("MdAutocompleteCtrl",e);var a=41,i=5.5*a,c=8;e.$inject=["$scope","$element","$mdUtil","$mdConstant","$timeout","$mdTheming","$window","$animate","$rootElement"],angular.module("material.components.autocomplete").directive("mdAutocomplete",t),t.$inject=["$mdTheming","$mdUtil"],angular.module("material.components.autocomplete").controller("MdHighlightCtrl",n),n.$inject=["$scope","$element","$interpolate"],angular.module("material.components.autocomplete").directive("mdHighlightText",l),angular.module("material.components.autocomplete").directive("mdAutocompleteListItem",o),o.$inject=["$compile","$mdUtil"]}();