/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.8.3-master-e7b7dcb
 */
!function(){"use strict";angular.module("material.components.chips",["material.core","material.components.autocomplete"])}(),function(){"use strict";function t(t){function i(i){return i.append(e),function(e,i){i.addClass("md-chip"),t(i)}}return{restrict:"E",requires:"^mdChips",compile:i}}angular.module("material.components.chips").directive("mdChip",t);var e='      <span ng-if="!$mdChipsCtrl.readonly" class="md-visually-hidden">        {{$mdChipsCtrl.deleteHint}}      </span>';t.$inject=["$mdTheming"]}(),function(){"use strict";function t(t){function e(e,i,n,c){i.on("click",function(){e.$apply(function(){c.removeChip(e.$index)})}),t(function(){i.find("button").attr("tabindex","-1")})}return{restrict:"A",require:"^mdChips",scope:!1,link:e}}angular.module("material.components.chips").directive("mdChipRemove",t),t.$inject=["$timeout"]}(),function(){"use strict";function t(t){function e(e,i,n){var c=e.$parent.$mdChipsCtrl,o=c.parent.$new(!1,c.parent);o.$chip=e.$chip,o.$mdChipsCtrl=c,i.html(c.$scope.$eval(n.mdChipTransclude)),t(i.contents())(o)}return{restrict:"EA",terminal:!0,link:e,scope:!1}}angular.module("material.components.chips").directive("mdChipTransclude",t),t.$inject=["$compile","$mdUtil"]}(),function(){"use strict";function t(t,e,i,n){this.$mdConstant=e,this.$scope=t,this.parent=t.$parent,this.$log=i,this.$element=n,this.ngModelCtrl=null,this.mdAutocompleteCtrl=null,this.userInputNgModelCtrl=null,this.userInputElement=null,this.items=[],this.selectedChip=-1,this.deleteHint="Press delete to remove this chip.",this.deleteButtonLabel="Remove",this.chipBuffer="",this.useMdOnAppend=!1}angular.module("material.components.chips").controller("MdChipsCtrl",t),t.$inject=["$scope","$mdConstant","$log","$element"],t.prototype.inputKeydown=function(t){switch(t.keyCode){case this.$mdConstant.KEY_CODE.ENTER:var e=this.getChipBuffer();e&&(t.preventDefault(),this.appendChip(e),this.resetChipBuffer());break;case this.$mdConstant.KEY_CODE.BACKSPACE:this.chipBuffer||(t.preventDefault(),this.items.length>0&&this.removeChip(this.items.length-1),t.target.focus())}},t.prototype.chipKeydown=function(t,e){switch(e.keyCode){case this.$mdConstant.KEY_CODE.BACKSPACE:case this.$mdConstant.KEY_CODE.DELETE:t>=0&&(e.preventDefault(),this.removeAndSelectAdjacentChip(t));break;case this.$mdConstant.KEY_CODE.LEFT_ARROW:this.selectChipSafe(this.selectedChip-1);break;case this.$mdConstant.KEY_CODE.RIGHT_ARROW:this.selectChipSafe(this.selectedChip+1)}},t.prototype.getPlaceholder=function(){var t=this.items.length&&(""==this.secondaryPlaceholder||this.secondaryPlaceholder);return t?this.placeholder:this.secondaryPlaceholder},t.prototype.removeAndSelectAdjacentChip=function(t){var e=this.getAdjacentChipIndex(t);this.removeChip(t),this.selectAndFocusChip(e)},t.prototype.resetSelectedChip=function(){this.selectedChip=-1},t.prototype.getAdjacentChipIndex=function(t){var e=this.items.length-1;return 0==e?-1:t==e?t-1:t},t.prototype.appendChip=function(t){this.useMdOnAppend&&this.mdOnAppend&&(t=this.mdOnAppend({$chip:t})),this.items.push(t)},t.prototype.useMdOnAppendExpression=function(){this.useMdOnAppend=!0},t.prototype.getChipBuffer=function(){if(this.mdAutocompleteCtrl)throw Error("getChipBuffer should not be called if there is an md-autocomplete");return this.userInputElement?this.userInputNgModelCtrl?this.userInputNgModelCtrl.$viewValue:this.userInputElement[0].value:this.chipBuffer},t.prototype.resetChipBuffer=function(){this.userInputElement?this.userInputNgModelCtrl?(this.userInputNgModelCtrl.$setViewValue(""),this.userInputNgModelCtrl.$render()):this.userInputElement[0].value="":this.chipBuffer=""},t.prototype.removeChip=function(t){this.items.splice(t,1)},t.prototype.selectChipSafe=function(t){return 0==this.items.length?(this.selectChip(-1),void 0):(0>t?t=0:t>this.items.length-1&&(t=this.items.length-1),this.selectChip(t),this.focusChip(t),void 0)},t.prototype.selectChip=function(t){t>=-1&&t<=this.items.length?this.selectedChip=t:this.$log.warn("Selected Chip index out of bounds; ignoring.")},t.prototype.selectAndFocusChip=function(t){this.selectChip(t),-1!=t&&this.focusChip(t)},t.prototype.focusChip=function(t){this.$element[0].querySelector('md-chip[index="'+t+'"] .md-chip-content').focus()},t.prototype.configureNgModel=function(t){this.ngModelCtrl=t;var e=this;t.$render=function(){e.items=e.ngModelCtrl.$viewValue}},t.prototype.configureMdAutocomplete=function(t){this.mdAutocompleteCtrl=t,this.mdAutocompleteCtrl.registerSelectedItemWatcher(this.mdAutocompleteSelectedItemWatcher.bind(this))},t.prototype.mdAutocompleteSelectedItemWatcher=function(t,e){t&&t!==e&&(this.appendChip(t),this.mdAutocompleteCtrl.clear())},t.prototype.configureUserInput=function(t){this.userInputElement=t;var e=t.controller("ngModel");e!=this.ngModelCtrl&&(this.userInputNgModelCtrl=e);var i=this.$scope,n=this;t.on("keydown",function(t){i.$apply(function(){n.inputKeydown(t)})})}}(),function(){"use strict";function t(t,o,s,r){function l(e,o){var l=o.$mdUserTemplate;o.$mdUserTemplate=null;var p=c,d=n,h=i,a=!1,m=!!o.ngModel,u=l.find("md-chip");if(m){var C=l.find("md-chip-template");C.length>0&&(d=C[0].outerHTML);var f=l[0].querySelector("[md-chip-remove]");f&&(p=f.outerHTML);var $=l.find("md-autocomplete");$.length>0?(h=$[0].outerHTML,a=!0):($=l.find("input"),$.length>0&&(h=$[0].outerHTML))}return function(e,n,c,o){t(n),n.attr("tabindex","-1");var l=o[0];if(l.chipContentsTemplate=d,l.chipRemoveTemplate=p,l.chipInputTemplate=h,m){var C=n.controller("ngModel");l.configureNgModel(C),c.mdOnAppend&&l.useMdOnAppendExpression(),h!=i&&r(function(){if(a){var t=n.find("md-autocomplete").controller("mdAutocomplete");l.configureMdAutocomplete(t)}else l.configureUserInput(n.find("input"))})}if(u.length>0){var f=s(u)(e.$parent);r(function(){n.find("md-chips-wrap").prepend(f)})}}}return{template:function(t,i){return i.$mdUserTemplate=t.clone(),i.tabindex="-1",e},require:["mdChips"],restrict:"E",controller:"MdChipsCtrl",controllerAs:"$mdChipsCtrl",bindToController:!0,compile:l,scope:{readonly:"=readonly",placeholder:"@",secondaryPlaceholder:"@",mdOnAppend:"&",deleteHint:"@",deleteButtonLabel:"@"}}}angular.module("material.components.chips").directive("mdChips",t);var e='      <md-chips-wrap          ng-if="!$mdChipsCtrl.readonly || $mdChipsCtrl.items.length > 0" class="md-chips">        <md-chip ng-repeat="$chip in $mdChipsCtrl.items"            index="{{$index}}"            ng-class="{selected: $mdChipsCtrl.selectedChip == $index}">          <div class="md-chip-content"              ng-click="!$mdChipsCtrl.readonly && $mdChipsCtrl.selectChip($index)"              ng-keydown="$mdChipsCtrl.chipKeydown($index, $event)"              md-chip-transclude="$mdChipsCtrl.chipContentsTemplate"></div>          <div class="md-chip-remove-container"               md-chip-transclude="$mdChipsCtrl.chipRemoveTemplate"></div>        </md-chip>        <div ng-if="!$mdChipsCtrl.readonly && $mdChipsCtrl.ngModelCtrl"            class="md-chip-input-container"            md-chip-transclude="$mdChipsCtrl.chipInputTemplate"></div>        </div>      </md-chips-wrap>',i='        <input            placeholder="{{$mdChipsCtrl.getPlaceholder()}}"            aria-label="{{$mdChipsCtrl.getPlaceholder()}}"            ng-model="$mdChipsCtrl.chipBuffer"            ng-focus="$mdChipsCtrl.resetSelectedChip()"            ng-keydown="$mdChipsCtrl.inputKeydown($event)">',n="      <span>{{$chip}}</span>",c='      <md-button           class="md-chip-remove"          ng-if="!$mdChipsCtrl.readonly"          ng-click="$mdChipsCtrl.removeChip($index)"          tabindex="-1">        <md-icon md-svg-icon="close"></md-icon>        <span class="md-visually-hidden">          {{$mdChipsCtrl.deleteButtonLabel}}        </span>      </md-button>';t.$inject=["$mdTheming","$log","$compile","$timeout"]}(),function(){"use strict";function t(){this.selectedItem=null,this.searchText=""}angular.module("material.components.chips").controller("MdContactChipsCtrl",t),t.prototype.queryContact=function(t){var e=this.contactQuery({$query:t});return this.filterSelected?e.filter(this.filterSelectedContacts.bind(this)):e},t.prototype.filterSelectedContacts=function(t){return-1==this.contacts.indexOf(t)}}(),function(){"use strict";function t(t){function i(){return function(e,i){t(i),i.attr("tabindex","-1")}}return{template:function(){return e},restrict:"E",controller:"MdContactChipsCtrl",controllerAs:"$mdContactChipsCtrl",bindToController:!0,compile:i,scope:{contactQuery:"&mdContacts",placeholder:"@",secondaryPlaceholder:"@",contactName:"@mdContactName",contactImage:"@mdContactImage",contactEmail:"@mdContactEmail",filterSelected:"=",contacts:"=ngModel"}}}angular.module("material.components.chips").directive("mdContactChips",t);var e='      <md-chips class="md-contact-chips"          ng-model="$mdContactChipsCtrl.contacts"          md-autocomplete-snap>          <md-autocomplete              md-menu-class="md-contact-chips-suggestions"              md-selected-item="$mdContactChipsCtrl.selectedItem"              md-search-text="$mdContactChipsCtrl.searchText"              md-items="item in $mdContactChipsCtrl.queryContact($mdContactChipsCtrl.searchText)"              md-item-text="$mdContactChipsCtrl.mdContactName"              md-no-cache="$mdContactChipsCtrl.filterSelected"              placeholder="{{$mdContactChipsCtrl.contacts.length == 0 ?                  $mdContactChipsCtrl.placeholder : $mdContactChipsCtrl.secondaryPlaceholder}}">            <div class="md-contact-suggestion">              <img                   ng-src="{{item[$mdContactChipsCtrl.contactImage]}}"                  alt="{{item[$mdContactChipsCtrl.contactName]}}" />              <span class="md-contact-name" md-highlight-text="$mdContactChipsCtrl.searchText">                {{item[$mdContactChipsCtrl.contactName]}}              </span>              <span class="md-contact-email" >{{item[$mdContactChipsCtrl.contactEmail]}}</span>            </div>          </md-autocomplete>          <md-chip-template>            <div class="md-contact-avatar">              <img                   ng-src="{{$chip[$mdContactChipsCtrl.contactImage]}}"                  alt="{{$chip[$mdContactChipsCtrl.contactName]}}" />            </div>            <div class="md-contact-name">              {{$chip[$mdContactChipsCtrl.contactName]}}            </div>          </md-chip-template>      </md-chips>';t.$inject=["$mdTheming"]}();