/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.5.1-master-f5761d5
 */
!function(){"use strict";function e(e,t){return{restrict:"E",replace:!0,scope:{fid:"@?mdFid",label:"@?",value:"=ngModel"},compile:function(n,i){return angular.isUndefined(i.mdFid)&&(i.mdFid=t.nextUid()),{pre:function(e,t,n){angular.isDefined(n.disabled)&&(t.attr("disabled",!0),e.isDisabled=!0),e.inputType=n.type||"text",t.removeAttr("type"),t.attr("class",n.class)},post:e}},template:'<md-input-group ng-disabled="isDisabled" tabindex="-1"> <label for="{{fid}}" >{{label}}</label> <md-input id="{{fid}}" ng-model="value" type="{{inputType}}"></md-input></md-input-group>'}}function t(){return{restrict:"CE",controller:["$element",function(e){this.setFocused=function(t){e.toggleClass("md-input-focused",!!t)},this.setHasValue=function(t){e.toggleClass("md-input-has-value",t)}}]}}function n(){return{restrict:"E",replace:!0,template:"<input >",require:["^?mdInputGroup","?ngModel"],link:function(e,t,n,i){function u(e){return e=angular.isUndefined(e)?t.val():e,angular.isDefined(e)&&null!==e&&""!=e.toString().trim()}if(i[0]){var a=i[0],r=i[1],d=t[0].parentNode,l=d&&d.hasAttribute("disabled");t.attr({tabindex:l?-1:0,"aria-disabled":l?"true":"false",type:n.type||t.parent().attr("type")||"text"}),r&&r.$formatters.push(function(e){return a.setHasValue(u(e)),e}),t.on("input",function(){a.setHasValue(u())}).on("focus",function(){a.setFocused(!0)}).on("blur",function(){a.setFocused(!1),a.setHasValue(u())}),e.$on("$destroy",function(){a.setFocused(!1),a.setHasValue(!1)})}}}}angular.module("material.components.textField",["material.core"]).directive("mdInputGroup",t).directive("mdInput",n).directive("mdTextFloat",e),e.$inject=["$mdTheming","$mdUtil"],n.$inject=["$mdUtil"]}();